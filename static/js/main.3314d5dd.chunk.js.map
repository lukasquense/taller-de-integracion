{"version":3,"sources":["components/table/table_component.jsx","components/data_table/data_table_component.jsx","components/dashboard/dashboard_component.jsx","App.js","serviceWorker.js","index.js"],"names":["HtmlTooltip","withStyles","theme","tooltip","backgroundColor","color","maxWidth","fontSize","typography","pxToRem","border","Tooltip","TableStock","props","state","size","i","this","stock","console","log","time","Date","length","time_v","addZero","getDate","getMonth","getHours","getMinutes","getSeconds","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","Object","keys","map","ticker","title","Fragment","Typography","key","scope","buy_data","elem","reduce","a","b","sell_data","Component","TableData","Math","max","min","toFixed","useStyles","makeStyles","container","display","gridTemplateColumns","gridGap","spacing","paper","padding","textAlign","palette","text","secondary","whiteSpace","marginBottom","divider","margin","CSSGrid","stocks_info","market","classes","React","currentKey","setKey","current","setCurrent","data","String","date","d","value","Grid","item","xs","ButtonGroup","Button","onClick","className","socket","io","protocolo","path","App","handleClick","bind","connection_text","exchanges_data","emit","on","setState","forEach","e","stock_info","stocks_data","values","stocks_data2","company_name","currentData","volume","connected","close","open","AppBar","position","Toolbar","variant","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3314d5dd.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './table_styles.scss';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nconst HtmlTooltip = withStyles((theme) => ({\n    tooltip: {\n      backgroundColor: '#f5f5f9',\n      color: 'rgba(0, 0, 0, 0.87)',\n      maxWidth: 220,\n      fontSize: theme.typography.pxToRem(12),\n      border: '1px solid #dadde9',\n    },\n  }))(Tooltip);\n\n\nexport default class TableStock extends Component {\n    constructor(props){\n      super(props);\n      this.state = {size: 3}\n    }\n\n    addZero(i) {\n        if (i < 10) {\n          i = \"0\" + i;\n        }\n        return i;\n      }\n      \n    render(){\n        if(this.props.stock && this.props.stock['AAPL']){\n            console.log(this.props.stock)\n            var time = new Date(this.props.stock['AAPL'][this.props.stock['AAPL'].length -1][\"time\"])\n            var time_v = this.addZero(time.getDate())+\"/\"+this.addZero(time.getMonth()+1)+\" -- \"+this.addZero(time.getHours())+\":\"+this.addZero(time.getMinutes())+\":\"+this.addZero(time.getSeconds())\n            return(\n                <TableContainer component={Paper}>\n                <Table aria-label=\"simple table\">\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticker</TableCell>\n                      <TableCell align=\"right\">Time </TableCell>\n                      <TableCell align=\"right\">Value</TableCell>\n                      <TableCell align=\"right\">Volumen Transado</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {Object.keys(this.props.stock).map((ticker) => (\n                        <HtmlTooltip\n                        title={\n                          <React.Fragment>\n                            <Typography color=\"inherit\">Tooltip with HTML</Typography>\n                            <em>{\"And here's\"}</em> <b>{'some'}</b> <u>{'amazing content'}</u>.{' '}\n                            {\"It's very engaging. Right?\"}\n                          </React.Fragment>\n                        }\n                      >\n                      \n                        <TableRow key={ticker}>\n                        <TableCell component=\"th\" scope=\"row\">\n                          {ticker}\n                        </TableCell>\n                        \n                        <TableCell align=\"right\">{time_v}</TableCell>\n                        <TableCell align=\"right\">{this.props.stock[ticker][this.props.stock[ticker].length -1][\"value\"]}</TableCell>\n                        <TableCell align=\"right\">\n                        {this.props.buy_data[ticker]\n                            ? this.props.buy_data[ticker].length >= 2\n                              ? this.props.buy_data[ticker].map((elem) => elem[1]).reduce((a, b) => a + b, 0)\n                              : this.props.buy_data[ticker].map((elem) => elem[1])[0]\n                            : 0 + this.props.sell_data[ticker]\n                            ? this.props.sell_data[ticker].length >= 2\n                              ? this.props.sell_data[ticker].map((elem) => elem[1]).reduce((a, b) => a + b, 0)\n                              : this.props.sell_data[ticker].map((elem) => elem[1])[0]\n                            : 0}\n                        \n                        </TableCell>\n                      </TableRow>\n                      </HtmlTooltip>\n                    ))}\n                    \n                  </TableBody>\n                </Table>\n            </TableContainer>\n            )\n        }\n    else{\n        return(\n            <TableContainer component={Paper}>\n            <Table aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Ticker</TableCell>\n                  <TableCell align=\"right\">Time </TableCell>\n                  <TableCell align=\"right\">Value</TableCell>\n                </TableRow>\n              </TableHead>\n            </Table>\n        </TableContainer>\n        )\n    }\n    }\n  }","import React, { Component } from 'react'\nimport './data_table_styles.scss';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nconst HtmlTooltip = withStyles((theme) => ({\n    tooltip: {\n      backgroundColor: '#f5f5f9',\n      color: 'rgba(0, 0, 0, 0.87)',\n      maxWidth: 220,\n      fontSize: theme.typography.pxToRem(12),\n      border: '1px solid #dadde9',\n    },\n  }))(Tooltip);\n\n\nexport default class TableData extends Component {\n    constructor(props){\n      super(props);\n      this.state = {size: 3}\n    }\n\n    \n\n    render(){\n        if(this.props.stock && this.props.stock['AAPL']){\n            console.log(\"VAR TABLE\",  this.props.stock)\n            return(\n                <TableContainer component={Paper}>\n                <Table aria-label=\"simple table\">\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Ticker</TableCell>\n                      <TableCell align=\"right\">Maximo </TableCell>\n                      <TableCell align=\"right\">Minimo</TableCell>\n                      <TableCell align=\"right\">Ultimo</TableCell>\n                      <TableCell align=\"right\">Variacion</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {Object.keys(this.props.stock).map((ticker) => (\n                        <HtmlTooltip\n                        title={\n                          <React.Fragment>\n                            <Typography color=\"inherit\">Tooltip with HTML</Typography>\n                            <em>{\"And here's\"}</em> <b>{'some'}</b> <u>{'amazing content'}</u>.{' '}\n                            {\"It's very engaging. Right?\"}\n                          </React.Fragment>\n                        }\n                      >\n                      \n                        <TableRow key={ticker}>\n                        <TableCell component=\"th\" scope=\"row\">\n                          {ticker}\n                        </TableCell>\n                        {console.log(this.props.stock[ticker])}\n                        <TableCell align=\"right\">{this.props.stock[ticker] ? Math.max(...this.props.stock[ticker].map((elem) => elem['value'])) : 0}</TableCell>\n                        <TableCell align=\"right\">{this.props.stock[ticker] ? Math.min(...this.props.stock[ticker].map((elem) => elem['value'])) : 0}</TableCell>\n                        <TableCell align=\"right\">{this.props.stock[ticker] ? this.props.stock[ticker][this.props.stock[ticker].length - 1]['value'] : 0}</TableCell>\n                        <TableCell align=\"right\">{this.props.stock[ticker]\n                            ? this.props.stock[ticker].length >= 2\n                              ? (((this.props.stock[ticker][this.props.stock[ticker].length - 1]['value'] - this.props.stock[ticker][this.props.stock[ticker].length - 2]['value']) /\n                              this.props.stock[ticker][this.props.stock[ticker].length - 2]['value'])*100).toFixed(3)\n                              : 0\n                            : 0}%</TableCell>\n                      </TableRow>\n                      </HtmlTooltip>\n                    ))}\n                    \n                  </TableBody>\n                </Table>\n            </TableContainer>\n            )\n        }\n    else{\n        return(\n            <TableContainer component={Paper}>\n            <Table aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Ticker</TableCell>\n                  <TableCell align=\"right\">Time </TableCell>\n                  <TableCell align=\"right\">Value</TableCell>\n                </TableRow>\n              </TableHead>\n            </Table>\n        </TableContainer>\n        )\n    }\n    }\n  }","import * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport {ButtonGroup, Button} from '@material-ui/core';\nimport TableStock from '../table/table_component';\nimport TableData from '../data_table/data_table_component';\nimport { LineChart, PieChart } from 'react-chartkick'\nimport 'chart.js'\nimport { getSnapshotData } from 'jest-snapshot/build/utils';\n\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(12, 1fr)',\n    gridGap: theme.spacing(3),\n  },\n  paper: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    whiteSpace: 'nowrap',\n    marginBottom: theme.spacing(1),\n  },\n  divider: {\n    margin: theme.spacing(2, 0),\n  },\n}));\n\nexport default function CSSGrid({stock, market, stocks_info, buy_data, sell_data}) {\n  const classes = useStyles();\n  const [currentKey, setKey] = React.useState(\"AAPL\")\n  const [current, setCurrent] = React.useState({})\n  \n    React.useEffect(() => {\n      var data = {}\n      if (stock && stock[String(currentKey)]){\n        if(stock[String(currentKey)].length > 30){\n         for(var i = stock[String(currentKey)].length - 30; i< stock[String(currentKey)].length; i++){\n             var date = new Date(stock[String(currentKey)][i]['time']);\n             var key = date.getMinutes() + \"-\" + date.getSeconds();\n             var d = String(key);\n             var value = stock[String(currentKey)][i]['value'];\n             data[d] = value;\n         }\n         \n         setCurrent(data)\n    }}}, [currentKey, stock])\n\n\n  return (\n    <div>\n      <Grid container spacing={3}>\n        <Grid item xs={3}>\n        <TableStock stock= {stock} stocks_info={stocks_info} buy_data = {buy_data} sell_data={sell_data}/>\n        </Grid> \n        <Grid item xs={5}>\n        <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n            {Object.keys(stock).map(key =>\n                <Button onClick={() => setKey(key)}>\n                    {key}\n                </Button>\n            )}\n        </ButtonGroup>\n        <LineChart data={current} />\n        </Grid>\n        <Grid item xs={4}>\n          <TableData stock={stock} />\n        </Grid>\n    \n        <Grid item xs={12}>\n        <h1>Mercado de transacciones</h1>\n        </Grid>\n        \n        <Grid item xs={1}>\n        </Grid>\n        <Grid item xs={5}>\n        </Grid>\n        <Grid item xs={5}>\n          <Paper className={classes.paper}>xs=8</Paper>\n        </Grid>\n        <Grid item xs={1}>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}","import React, { Component } from 'react';\nimport './App.css';\nimport io from 'socket.io-client';\nimport Stock from './components/linechart/linechart_component';\n\nimport CSSGrid from './components/dashboard/dashboard_component';\nimport { AppBar, Toolbar, Typography, Button } from '@material-ui/core';\nimport { IconButton, MenuIcon } from '@material-ui/icons';\n\n\n\n\n\nconst protocolo = \"wss://\";\nconst servidor = \"le-18262636.bitzonte.com\";\nconst ruta = \"/stocks\";\n\nconst socket = io(protocolo + servidor, {\n  path: ruta\n});\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.handleClick = this.handleClick.bind(this);\n    this.state = {\n      stock : {},\n      stocks_info: {},\n      connection_text : 'Desconectar socket',\n      buy_data: {},\n      sell_data: {},\n      exchanges_data: {},\n    }\n  }\n  \n  componentDidMount() {\n    console.log('Página montada');\n    console.log('Encendiendo socket');\n\n    socket.emit(\"EXCHANGES\", (data) =>{\n    });\n    \n    socket.on(\"EXCHANGES\", (data) => {\n      this.setState({ ...this.state, exchanges_data: data });\n    });\n\n    socket.emit(\"STOCKS\", (data) =>{\n    });\n\n    socket.on(\"STOCKS\", current =>{\n      console.log(\"current\", current)\n      \n      current.forEach((e) => {\n        this.setState(state=> ({...state, stocks_info: {...state.stock_info, [e.ticker]: e}})\n      )})\n    });\n\n    socket.on(\"STOCKS\", (data) => {\n      this.setState({ ...this.state, stocks_data: data });\n      Object.values(data).map((stock) =>\n        this.setState({\n          ...this.state,\n          stocks_data2: {\n            ...this.state.stocks_data2,\n            [stock.company_name]: stock.ticker,\n          },\n        })\n      );\n    });\n\n\n    socket.on(\"UPDATE\", current =>{\n\n      var data = {\n        time: current.time,\n        value: current.value\n      }\n      this.setState(state=> ({...state, stock: {...state.stock,\n        [current.ticker]: [...state.stock[current.ticker] || [], \n        data]}}))\n       });\n\n\n    socket.on(\"BUY\", (data) => {\n      const currentData = this.state.buy_data[data.ticker]\n        ? this.state.buy_data[data.ticker]\n        : [];\n      this.setState({\n        ...this.state,\n        buy_data: {\n          ...this.state.buy_data,\n          [data.ticker]: [...currentData, [new Date(data.time), data.volume]],\n        },\n      });\n     });\n\n    socket.on(\"SELL\", (data) => {\n      const currentData = this.state.sell_data[data.ticker]\n        ? this.state.sell_data[data.ticker]\n        : [];\n      this.setState({\n        ...this.state,\n        sell_data: {\n          ...this.state.sell_data,\n          [data.ticker]: [...currentData, [new Date(data.time), data.volume]],\n        },\n      });\n    });\n  }\n\n  handleClick() {\n    \n      if (socket.connected){\n        socket.close()\n        console.log(socket.connected);\n        this.setState({\n          connection_text: 'Conectar socket'\n        })\n      } // true\n      else {\n        socket.open()\n        console.log(socket.connected);\n        this.setState({\n          connection_text: 'Desconectar socket'\n          \n        })\n      };\n  }\n\n\n    //create a new socket connection\n    //see documentation https://github.com/sockjs/sockjs-client#getting-started\n  \n  render() {\n    //console.log(\"stocks info: \", this.state.stocks_info)\n    //console.log(\"stocks : \", this.state.stock)\n    if (this.state.stock &&  this.state.stock['IBM']){\n      return (\n        <div className=\"App\">\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography variant=\"h6\" >\n              <Button color=\"inherit\" position=\"right\" onClick={this.handleClick}>{this.state.connection_text}</Button>\n            </Typography>\n            \n          </Toolbar>\n        </AppBar>\n          <h1> Mercado de acciones </h1>\n          <CSSGrid stock={this.state.stock} market = {this.state.market} stocks_info={this.state.stocks_info} buy_data={this.state.buy_data} sell_data={this.state.sell_data}/>\n        </div>\n      );\n    }\n    else{\n      return (\n        <div className=\"App\">\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography variant=\"h6\" >\n              <Button color=\"inherit\" position=\"right\" onClick={this.handleClick}>{this.state.connection_text}</Button>\n            </Typography>\n            \n          </Toolbar>\n        </AppBar>\n          <h1> Mercado de acciones </h1>\n        </div>\n      );\n    }\n  }\n}\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}