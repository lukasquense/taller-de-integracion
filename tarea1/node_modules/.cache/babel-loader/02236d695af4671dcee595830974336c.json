{"ast":null,"code":"import React from\"react\";import{Link}from\"react-router-dom\";import{useFetch}from\"utils/hooks\";var Character=function Character(_ref){var result=_ref.result;return/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"section columns\"},/*#__PURE__*/React.createElement(\"div\",{className:\"column is-8 is-offset-2\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"title has-text-centered\"},result.name),/*#__PURE__*/React.createElement(\"div\",{className:\"box\"},/*#__PURE__*/React.createElement(\"article\",{className:\"media\"},/*#__PURE__*/React.createElement(\"div\",{className:\"media-left\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"media-content\"},/*#__PURE__*/React.createElement(\"div\",{className:\"content\"},/*#__PURE__*/React.createElement(\"aside\",{className:\"menu\"},/*#__PURE__*/React.createElement(\"p\",{className:\"menu-label\"},\"Basic Information\"),/*#__PURE__*/React.createElement(\"ul\",{className:\"menu-list\"},/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"Status:\"),\" \",result.status),/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"Species:\"),\" \",result.species),/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"Type:\"),\" \",result.type),/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"Gender:\"),\" \",result.gender),/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"Origin:\"),\" \",/*#__PURE__*/React.createElement(LocationDetail,{url:result.origin.url})),/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"Location:\"),\" \",/*#__PURE__*/React.createElement(LocationDetail,{url:result.location.url})),/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"img\",{src:result.image})))))),/*#__PURE__*/React.createElement(\"div\",{className:\"media-right\"},/*#__PURE__*/React.createElement(Link,{to:\"/\",className:\"button\"},\"Home\")))),/*#__PURE__*/React.createElement(\"div\",{className:\"box\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"title has-text-centered\"},\"Episodes where appears\"),/*#__PURE__*/React.createElement(\"div\",{className:\"content has-text-centered\"},/*#__PURE__*/React.createElement(\"ul\",null,result.episode.map(function(epi){return/*#__PURE__*/React.createElement(EpisodeDetail,{url:epi});})))))));};var EpisodeDetail=function EpisodeDetail(_ref2){var url=_ref2.url;var _useFetch=useFetch(url),response=_useFetch.response;if(!response){return/*#__PURE__*/React.createElement(\"div\",null,\"Loading...\");}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Link,{to:\"/episode/\"+response.id},response.name));};var LocationDetail=function LocationDetail(_ref3){var url=_ref3.url;var _useFetch2=useFetch(url),response=_useFetch2.response;if(!response){return/*#__PURE__*/React.createElement(\"div\",null,\"Loading...\");}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Link,{to:\"/location/\"+response.id},response.name));};export default Character;","map":{"version":3,"sources":["/Users/albertoquense/Desktop/rick-morty/src/components/Character/CharacterView.js"],"names":["React","Link","useFetch","Character","result","name","status","species","type","gender","origin","url","location","image","episode","map","epi","EpisodeDetail","response","id","LocationDetail"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,QAAT,KAAyB,aAAzB,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,UAAGC,CAAAA,MAAH,MAAGA,MAAH,oBAChB,2BAAK,SAAS,CAAC,WAAf,eACE,2BAAK,SAAS,CAAC,iBAAf,eACE,2BAAK,SAAS,CAAC,yBAAf,eACE,0BAAI,SAAS,CAAC,yBAAd,EAAyCA,MAAM,CAACC,IAAhD,CADF,cAGE,2BAAK,SAAS,CAAC,KAAf,eACE,+BAAS,SAAS,CAAC,OAAnB,eACE,2BAAK,SAAS,CAAC,YAAf,EADF,cAGE,2BAAK,SAAS,CAAC,eAAf,eACE,2BAAK,SAAS,CAAC,SAAf,eACE,6BAAO,SAAS,CAAC,MAAjB,eACE,yBAAG,SAAS,CAAC,YAAb,sBADF,cAGE,0BAAI,SAAS,CAAC,WAAd,eACE,2CACE,4CADF,KAC4BD,MAAM,CAACE,MADnC,CADF,cAIE,2CACE,6CADF,KAC6BF,MAAM,CAACG,OADpC,CAJF,cAOE,2CACE,0CADF,KAC0BH,MAAM,CAACI,IADjC,CAPF,cAUE,2CACE,4CADF,KAC4BJ,MAAM,CAACK,MADnC,CAVF,cAaE,2CACE,4CADF,kBAC2B,oBAAC,cAAD,EAAgB,GAAG,CAAEL,MAAM,CAACM,MAAP,CAAcC,GAAnC,EAD3B,CAbF,cAgBE,2CACA,8CADA,kBAC2B,oBAAC,cAAD,EAAgB,GAAG,CAAEP,MAAM,CAACQ,QAAP,CAAgBD,GAArC,EAD3B,CAhBF,cAoBE,2CACE,2BAAK,GAAG,CAAGP,MAAM,CAACS,KAAlB,EADF,CApBF,CAHF,CADF,CADF,CAHF,cAoCE,2BAAK,SAAS,CAAC,aAAf,eACE,oBAAC,IAAD,EAAM,EAAE,CAAC,GAAT,CAAa,SAAS,CAAC,QAAvB,SADF,CApCF,CADF,CAHF,cAgDE,2BAAK,SAAS,CAAC,KAAf,eACE,0BAAI,SAAS,CAAC,yBAAd,2BADF,cAGE,2BAAK,SAAS,CAAC,2BAAf,eACE,8BACGT,MAAM,CAACU,OAAP,CAAeC,GAAf,CAAmB,SAAAC,GAAG,qBACrB,oBAAC,aAAD,EAAe,GAAG,CAAEA,GAApB,EADqB,EAAtB,CADH,CADF,CAHF,CAhDF,CADF,CADF,CADgB,EAAlB,CAmEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,OAAa,IAAVN,CAAAA,GAAU,OAAVA,GAAU,eACZT,QAAQ,CAACS,GAAD,CADI,CACzBO,QADyB,WACzBA,QADyB,CAEjC,GAAI,CAACA,QAAL,CAAe,CACb,mBAAO,4CAAP,CACD,CACD,mBACE,4CACE,oBAAC,IAAD,EAAM,EAAE,CAAE,YAAcA,QAAQ,CAACC,EAAjC,EAAsCD,QAAQ,CAACb,IAA/C,CADF,CADF,CAKD,CAVD,CAYA,GAAMe,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,OAAa,IAAVT,CAAAA,GAAU,OAAVA,GAAU,gBACXT,QAAQ,CAACS,GAAD,CADG,CACxBO,QADwB,YACxBA,QADwB,CAEhC,GAAI,CAACA,QAAL,CAAe,CACb,mBAAO,4CAAP,CACD,CACD,mBACE,4CACE,oBAAC,IAAD,EAAM,EAAE,CAAE,aAAeA,QAAQ,CAACC,EAAlC,EAAuCD,QAAQ,CAACb,IAAhD,CADF,CADF,CAKD,CAVH,CAYA,cAAeF,CAAAA,SAAf","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useFetch } from \"utils/hooks\";\n\nconst Character = ({ result }) => (\n  <div className=\"container\">\n    <div className=\"section columns\">\n      <div className=\"column is-8 is-offset-2\">\n        <h2 className=\"title has-text-centered\">{result.name}</h2>\n\n        <div className=\"box\">\n          <article className=\"media\">\n            <div className=\"media-left\">\n            </div>\n            <div className=\"media-content\">\n              <div className=\"content\">\n                <aside className=\"menu\">\n                  <p className=\"menu-label\">Basic Information</p>\n\n                  <ul className=\"menu-list\">\n                    <li>\n                      <strong>Status:</strong> {result.status}\n                    </li>\n                    <li>\n                      <strong>Species:</strong> {result.species}\n                    </li>\n                    <li>\n                      <strong>Type:</strong> {result.type}\n                    </li>\n                    <li>\n                      <strong>Gender:</strong> {result.gender}\n                    </li>\n                    <li>\n                      <strong>Origin:</strong> <LocationDetail url={result.origin.url} />\n                    </li>\n                    <li>\n                    <strong>Location:</strong> <LocationDetail url={result.location.url} />\n                    </li>\n                    \n                    <li>\n                      <img src= {result.image} />\n                    </li>\n                    \n                  </ul>\n                </aside>\n              </div>\n            </div>\n            <div className=\"media-right\">\n              <Link to=\"/\" className=\"button\">\n                Home\n              </Link>\n            </div>\n          </article>\n        </div>\n\n        <div className=\"box\">\n          <h2 className=\"title has-text-centered\">Episodes where appears</h2>\n\n          <div className=\"content has-text-centered\">\n            <ul>\n              {result.episode.map(epi => (\n                <EpisodeDetail url={epi} />\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nconst EpisodeDetail = ({ url }) => {\n  const { response } = useFetch(url);\n  if (!response) {\n    return <div>Loading...</div>;\n  }\n  return (\n    <div>\n      <Link to={\"/episode/\" + response.id}>{response.name}</Link>\n    </div>\n  );\n};\n\nconst LocationDetail = ({ url }) => {\n    const { response } = useFetch(url);\n    if (!response) {\n      return <div>Loading...</div>;\n    }\n    return (\n      <div>\n        <Link to={\"/location/\" + response.id}>{response.name}</Link>\n      </div>\n    );\n  };\n\nexport default Character;"]},"metadata":{},"sourceType":"module"}