{"ast":null,"code":"import React from\"react\";import{Link}from\"react-router-dom\";import{useFetch}from\"utils/hooks\";var Episode=function Episode(_ref){var result=_ref.result;return/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"section columns\"},/*#__PURE__*/React.createElement(\"div\",{className:\"column is-8 is-offset-2\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"title has-text-centered\"},result.name),/*#__PURE__*/React.createElement(\"div\",{className:\"box\"},/*#__PURE__*/React.createElement(\"article\",{className:\"media\"},/*#__PURE__*/React.createElement(\"div\",{className:\"media-left\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"media-content\"},/*#__PURE__*/React.createElement(\"div\",{className:\"content\"},/*#__PURE__*/React.createElement(\"aside\",{className:\"menu\"},/*#__PURE__*/React.createElement(\"p\",{className:\"menu-label\"},\"Basic Information\"),/*#__PURE__*/React.createElement(\"ul\",{className:\"menu-list\"},/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"Air date:\"),\" \",result.air_date),/*#__PURE__*/React.createElement(\"li\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"Episode code:\"),\" \",result.episode))))),/*#__PURE__*/React.createElement(\"div\",{className:\"media-right\"},/*#__PURE__*/React.createElement(Link,{to:\"/\",className:\"button\"},\"Home\")))),/*#__PURE__*/React.createElement(\"div\",{className:\"box\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"title has-text-centered\"},\"Characters\"),/*#__PURE__*/React.createElement(\"div\",{className:\"content has-text-centered\"},/*#__PURE__*/React.createElement(\"ul\",null,result.characters.map(function(char){return/*#__PURE__*/React.createElement(CharacterDetail,{url:char});})))))));};var CharacterDetail=function CharacterDetail(_ref2){var url=_ref2.url;var _useFetch=useFetch(url),response=_useFetch.response;if(!response){return/*#__PURE__*/React.createElement(\"div\",null,\"Loading...\");}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Link,{to:\"/character/\"+response.id},response.name));};export default Episode;","map":{"version":3,"sources":["/Users/albertoquense/Desktop/rick-morty/src/components/Episode/EpisodeView.js"],"names":["React","Link","useFetch","Episode","result","name","air_date","episode","characters","map","char","CharacterDetail","url","response","id"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,QAAT,KAAyB,aAAzB,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,UAAGC,CAAAA,MAAH,MAAGA,MAAH,oBACd,2BAAK,SAAS,CAAC,WAAf,eACE,2BAAK,SAAS,CAAC,iBAAf,eACE,2BAAK,SAAS,CAAC,yBAAf,eACE,0BAAI,SAAS,CAAC,yBAAd,EAAyCA,MAAM,CAACC,IAAhD,CADF,cAGE,2BAAK,SAAS,CAAC,KAAf,eACE,+BAAS,SAAS,CAAC,OAAnB,eACE,2BAAK,SAAS,CAAC,YAAf,EADF,cAGE,2BAAK,SAAS,CAAC,eAAf,eACE,2BAAK,SAAS,CAAC,SAAf,eACE,6BAAO,SAAS,CAAC,MAAjB,eACE,yBAAG,SAAS,CAAC,YAAb,sBADF,cAEE,0BAAI,SAAS,CAAC,WAAd,eACE,2CACE,8CADF,KAC8BD,MAAM,CAACE,QADrC,CADF,cAIE,2CACE,kDADF,KACkCF,MAAM,CAACG,OADzC,CAJF,CAFF,CADF,CADF,CAHF,cAkBE,2BAAK,SAAS,CAAC,aAAf,eACE,oBAAC,IAAD,EAAM,EAAE,CAAC,GAAT,CAAa,SAAS,CAAC,QAAvB,SADF,CAlBF,CADF,CAHF,cA8BE,2BAAK,SAAS,CAAC,KAAf,eACE,0BAAI,SAAS,CAAC,yBAAd,eADF,cAGE,2BAAK,SAAS,CAAC,2BAAf,eACE,8BACGH,MAAM,CAACI,UAAP,CAAkBC,GAAlB,CAAsB,SAAAC,IAAI,qBACzB,oBAAC,eAAD,EAAiB,GAAG,CAAEA,IAAtB,EADyB,EAA1B,CADH,CADF,CAHF,CA9BF,CADF,CADF,CADc,EAAhB,CAiDA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,OAAa,IAAVC,CAAAA,GAAU,OAAVA,GAAU,eACdV,QAAQ,CAACU,GAAD,CADM,CAC3BC,QAD2B,WAC3BA,QAD2B,CAEnC,GAAI,CAACA,QAAL,CAAe,CACb,mBAAO,4CAAP,CACD,CACD,mBACE,4CACE,oBAAC,IAAD,EAAM,EAAE,CAAE,cAAgBA,QAAQ,CAACC,EAAnC,EAAwCD,QAAQ,CAACR,IAAjD,CADF,CADF,CAKD,CAVD,CAYA,cAAeF,CAAAA,OAAf","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useFetch } from \"utils/hooks\";\r\n\r\nconst Episode = ({ result }) => (\r\n  <div className=\"container\">\r\n    <div className=\"section columns\">\r\n      <div className=\"column is-8 is-offset-2\">\r\n        <h2 className=\"title has-text-centered\">{result.name}</h2>\r\n\r\n        <div className=\"box\">\r\n          <article className=\"media\">\r\n            <div className=\"media-left\">\r\n            </div>\r\n            <div className=\"media-content\">\r\n              <div className=\"content\">\r\n                <aside className=\"menu\">\r\n                  <p className=\"menu-label\">Basic Information</p>\r\n                  <ul className=\"menu-list\">\r\n                    <li>\r\n                      <strong>Air date:</strong> {result.air_date}\r\n                    </li>\r\n                    <li>\r\n                      <strong>Episode code:</strong> {result.episode}\r\n                    </li>\r\n                  </ul>\r\n                </aside>\r\n              </div>\r\n            </div>\r\n            <div className=\"media-right\">\r\n              <Link to=\"/\" className=\"button\">\r\n                Home\r\n              </Link>\r\n            </div>\r\n          </article>\r\n        </div>\r\n\r\n        <div className=\"box\">\r\n          <h2 className=\"title has-text-centered\">Characters</h2>\r\n\r\n          <div className=\"content has-text-centered\">\r\n            <ul>\r\n              {result.characters.map(char => (\r\n                <CharacterDetail url={char} />\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst CharacterDetail = ({ url }) => {\r\n  const { response } = useFetch(url);\r\n  if (!response) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  return (\r\n    <div>\r\n      <Link to={\"/character/\" + response.id}>{response.name}</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Episode;\r\n"]},"metadata":{},"sourceType":"module"}