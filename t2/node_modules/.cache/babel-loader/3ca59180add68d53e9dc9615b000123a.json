{"ast":null,"code":"const burgers = require(\"./burgers.json\");\n\nfunction getAllBurgers(_req, res) {\n  return res.json({\n    success: true,\n    data: burgers\n  });\n}\n\nfunction getBurger(req, res) {\n  const requiredBurger = req.params.burger;\n  const burg = burgers.filter(burg => burg.name === requiredBurger);\n  const exists = burg.length > 0;\n  return res.status(exists ? 200 : 404).json({\n    success: exists,\n    data: exists ? burg[0] : 'Burger not found'\n  });\n}\n\nmodule.exports = {\n  getAllBurgers,\n  getBurger\n};","map":{"version":3,"sources":["/Users/albertoquense/Desktop/tarea2/src/burgers/controller.js"],"names":["burgers","require","getAllBurgers","_req","res","json","success","data","getBurger","req","requiredBurger","params","burger","burg","filter","name","exists","length","status","module","exports"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,gBAAD,CAAvB;;AAEA,SAASC,aAAT,CAAuBC,IAAvB,EAA6BC,GAA7B,EAAiC;AAC7B,SAAOA,GAAG,CAACC,IAAJ,CAAS;AACZC,IAAAA,OAAO,EAAE,IADG;AAEZC,IAAAA,IAAI,EAAEP;AAFM,GAAT,CAAP;AAIH;;AAED,SAASQ,SAAT,CAAmBC,GAAnB,EAAwBL,GAAxB,EAA4B;AACxB,QAAMM,cAAc,GAAGD,GAAG,CAACE,MAAJ,CAAWC,MAAlC;AACA,QAAMC,IAAI,GAAGb,OAAO,CAACc,MAAR,CAAgBD,IAAD,IAASA,IAAI,CAACE,IAAL,KAAcL,cAAtC,CAAb;AACA,QAAMM,MAAM,GAAGH,IAAI,CAACI,MAAL,GAAc,CAA7B;AAEA,SAAOb,GAAG,CACDc,MADF,CACSF,MAAM,GAAE,GAAF,GAAM,GADrB,EAEEX,IAFF,CAEO;AACFC,IAAAA,OAAO,EAAEU,MADP;AAEFT,IAAAA,IAAI,EAAES,MAAM,GAAGH,IAAI,CAAC,CAAD,CAAP,GAAa;AAFvB,GAFP,CAAP;AAMH;;AAEDM,MAAM,CAACC,OAAP,GAAiB;AACblB,EAAAA,aADa;AAEbM,EAAAA;AAFa,CAAjB","sourcesContent":["const burgers = require(\"./burgers.json\");\n\nfunction getAllBurgers(_req, res){\n    return res.json({\n        success: true, \n        data: burgers\n    });\n}\n\nfunction getBurger(req, res){\n    const requiredBurger = req.params.burger;\n    const burg = burgers.filter((burg)=> burg.name === requiredBurger);\n    const exists = burg.length > 0;\n\n    return res\n            .status(exists ?200:404)\n            .json({\n                success: exists,\n                data: exists ? burg[0] : 'Burger not found'\n            })\n}\n\nmodule.exports = {\n    getAllBurgers,\n    getBurger\n}"]},"metadata":{},"sourceType":"module"}