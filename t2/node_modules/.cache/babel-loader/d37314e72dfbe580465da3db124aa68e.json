{"ast":null,"code":"var _jsxFileName = \"/Users/albertoquense/Desktop/t2/src/App.js\";\nimport React, { Component } from 'react';\nimport { Table, Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Label, Input, CustomInput } from 'reactstrap';\nimport Checkbox from \"./Checkbox\";\nconst options = [\"One\", \"Two\", \"Three\"];\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      burgers: [],\n      newBurgerData: {\n        name: '',\n        ingredients: []\n      },\n      checkboxes: options.reduce((options, option) => ({ ...options,\n        [option]: false\n      }), {}),\n      newBurgerModal: false\n    };\n\n    this.handleChange = value => {\n      this.setState({ ...this.state,\n        newBurgerData: { ...this.state.newBurgerData,\n          name: value\n        }\n      });\n      console.log(this.state);\n    };\n\n    this.handleCheckboxChange = changeEvent => {\n      const {\n        name\n      } = changeEvent.target;\n      this.setState(prevState => ({\n        checkboxes: { ...prevState.checkboxes,\n          [name]: !prevState.checkboxes[name]\n        }\n      }));\n    };\n\n    this.handleFormSubmit = formSubmitEvent => {\n      formSubmitEvent.preventDefault();\n      console.log(formSubmitEvent);\n      const data = new FormData(formSubmitEvent);\n      Object.keys(this.state.checkboxes).filter(checkbox => this.state.checkboxes[checkbox]).forEach(checkbox => {\n        this.setState({ ...this.state,\n          newBurgerData: { ...this.state.newBurgerData,\n            ingredients: [...this.state.newBurgerData.ingredients, checkbox]\n          }\n        });\n      });\n      data.set(\"name\", data.name);\n      data.set(\"ingredients\", data.ingredients);\n      console.log(data);\n      fetch('http://us-central1-burgers-158df.cloudfunctions.net/api/burgers/create', {\n        method: 'POST',\n        body: data\n      });\n    };\n\n    this.createCheckbox = option => /*#__PURE__*/React.createElement(Checkbox, {\n      label: option,\n      isSelected: this.state.checkboxes[option],\n      onCheckboxChange: this.handleCheckboxChange,\n      key: option,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }\n    });\n\n    this.createCheckboxes = () => options.map(this.createCheckbox);\n  }\n\n  toggleNewBurgerModal() {\n    this.setState({\n      newBurgerModal: !this.state.newBurgerModal\n    });\n  }\n\n  //value={this.state.newBurgerData.name} onChange={e => this.handleChange(e.target.value)} /\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.toggleNewBurgerModal.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }, \"Add New Burger\"), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.newBurgerModal,\n      toggle: this.toggleNewBurgerModal.bind(this),\n      className: this.props.className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.toggleNewBurgerModal.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, \"Create New Burger\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleFormSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, \"Burger name\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"name\",\n      name: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, this.createCheckboxes(), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, \"Add Ingredients\")))), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.toggleNewBurgerModal.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, \"Add Burger\"), ' ', /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      onClick: this.toggleNewBurgerModal.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, \"Cancel\"))), /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, \"Image\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, \"1\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, \"Burger name\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }, \"Delicious burger\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"success\",\n      size: \"sm\",\n      className: \"mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, \"Edit\"), /*#__PURE__*/React.createElement(Button, {\n      color: \"danger\",\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, \"Delete\"))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/albertoquense/Desktop/t2/src/App.js"],"names":["React","Component","Table","Button","Modal","ModalHeader","ModalBody","ModalFooter","FormGroup","Label","Input","CustomInput","Checkbox","options","App","state","burgers","newBurgerData","name","ingredients","checkboxes","reduce","option","newBurgerModal","handleChange","value","setState","console","log","handleCheckboxChange","changeEvent","target","prevState","handleFormSubmit","formSubmitEvent","preventDefault","data","FormData","Object","keys","filter","checkbox","forEach","set","fetch","method","body","createCheckbox","createCheckboxes","map","toggleNewBurgerModal","render","bind","props","className"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Table, Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Label, Input, CustomInput} from 'reactstrap';\nimport Checkbox from \"./Checkbox\";\n\nconst options = [\"One\", \"Two\", \"Three\"];\n\nclass App extends Component {\n  state = {\n    burgers: [],\n    newBurgerData:{\n      name:'',\n      ingredients: []\n    },\n      checkboxes: options.reduce(\n        (options, option) => ({\n          ...options, \n          [option]: false\n        }),\n        {}\n      ),\n    newBurgerModal: false\n  };\n\n  toggleNewBurgerModal(){\n    this.setState({\n      newBurgerModal: !this.state.newBurgerModal,\n    })  \n  }\n\n  handleChange = value => {\n    this.setState({...this.state, newBurgerData: {...this.state.newBurgerData, name: value}});\n    console.log(this.state)\n  }\n\n  handleCheckboxChange = changeEvent => {\n    const { name } = changeEvent.target;\n\n    this.setState(prevState => ({\n      checkboxes: {\n        ...prevState.checkboxes,\n        [name]: !prevState.checkboxes[name]\n      }\n    }));\n  };\n\n  handleFormSubmit = formSubmitEvent => {\n    formSubmitEvent.preventDefault();\n    console.log(formSubmitEvent)\n    const data = new FormData(formSubmitEvent)\n    Object.keys(this.state.checkboxes)\n      .filter(checkbox => this.state.checkboxes[checkbox])\n      .forEach(checkbox => {\n        this.setState({...this.state, newBurgerData: {...this.state.newBurgerData, ingredients: [...this.state.newBurgerData.ingredients, checkbox]}});\n      });\n      data.set(\"name\", data.name)\n      data.set(\"ingredients\", data.ingredients)\n      console.log(data)\n      fetch('http://us-central1-burgers-158df.cloudfunctions.net/api/burgers/create', {\n        method: 'POST',\n        body: data,\n      });\n  };\n\n  createCheckbox = option => (\n    <Checkbox\n      label={option}\n      isSelected={this.state.checkboxes[option]}\n      onCheckboxChange={this.handleCheckboxChange}\n      key={option}\n    />\n  );\n\n  createCheckboxes = () => options.map(this.createCheckbox);\n\n//value={this.state.newBurgerData.name} onChange={e => this.handleChange(e.target.value)} /\n  render(){\n    return (\n      \n      \n      <div className=\"App container\">\n\n      <Button color=\"primary\" onClick={this.toggleNewBurgerModal.bind(this)}>Add New Burger</Button>\n      <Modal isOpen={this.state.newBurgerModal} \n              toggle={this.toggleNewBurgerModal.bind(this)} className={this.props.className}>\n        <ModalHeader toggle={this.toggleNewBurgerModal.bind(this)}>Create New Burger</ModalHeader>\n        <ModalBody>\n          <form onSubmit={this.handleFormSubmit} >\n          <FormGroup>\n            <Label for=\"name\">Burger name</Label>\n            <input id=\"name\" name=\"name\" />\n          </FormGroup>\n          <FormGroup>\n              {this.createCheckboxes()}\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Add Ingredients\n            </button>\n          </FormGroup>\n          </form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={this.toggleNewBurgerModal.bind(this)}>Add Burger</Button>{' '}\n          <Button color=\"secondary\" onClick={this.toggleNewBurgerModal.bind(this)}>Cancel</Button>\n        </ModalFooter>\n      </Modal>\n\n\n        <Table> \n          <thead>\n            <tr>\n            <th>#</th>\n            <th>Name</th>\n            <th>Description</th>\n            <th>Image</th>\n\n            </tr>\n          </thead>\n\n          <tbody>\n            <tr>\n            <td>1</td>\n            <td>Burger name</td>\n            <td>Delicious burger</td>\n            <td>\n            <Button color =\"success\" size= \"sm\" className=\"mr-2\">Edit</Button>\n            <Button color =\"danger\" size= \"sm\">Delete</Button>\n            </td>\n            </tr>\n          </tbody>\n        </Table>\n       \n      </div>\n    );\n  }\n}\n \n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}